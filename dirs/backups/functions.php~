<?php
/**
 * PWD Default Theme functions and definitions
 *
 * @package PWD Default Theme
 * @since PWD Default Theme 1.0
 */
/**
 * Set the Disabling the File Editor
 */
define('DISALLOW_FILE_EDIT', FALSE );
/**
 * Set the Developer Mode , Theme Option,
 *
 * @package PWD Default Theme
 */
define('PWD_DEV_MODE', false);
if(PWD_DEV_MODE){
	define('DISALLOW_FILE_EDIT', TRUE);
}
/*if ( function_exists( 'add_theme_support' ) ) { 
add_theme_support( 'post-thumbnails' );
set_post_thumbnail_size( 3000, 939, true ); // default Post Thumbnail dimensions (cropped)
add_image_size( 'blog', 480, 108 ); //300 pixels wide (and unlimited height)
add_image_size( 'testimonial', 37, 32 );
}*/
/**
 * Set the content width based on the theme's design and stylesheet.
 *
 * @since PWD Default Theme 1.0
 */
if ( ! isset( $content_width ) )
	$content_width = 640; /* pixels */
/*
 * Load Theme Options
 */
require( get_template_directory() . '/options.php' );
$pwd_options = get_option('pwd');
/*
 * Load Theme Options Shortcode
 */
function pwd_options_shortcode( $atts ) {
	extract( shortcode_atts( array(
		'id' => '',
	), $atts ) );
	global $pwd_options;
	if(!empty($pwd_options[$id])){
		return $pwd_options[$id];
	}else{
		return "";
	}
}
add_shortcode( 'pwd_option', 'pwd_options_shortcode' );

function pwd_get_option($pwd_option_id = ""){
	return do_shortcode('[pwd_option id="'.$dm_option_id.'"]');
}
/*
 * Load Post Type Slideshow compatibility file.
 */
require( get_template_directory() . '/inc/post_type_slideshow.php' );
require( get_template_directory() . '/inc/post_type_inner_slideshow.php' );
require( get_template_directory() . '/inc/post_type_testimonial.php' );
require( get_template_directory() . '/inc/post_type_blog.php' );
/*
 * Load Post Type CTA compatibility file.
 */
require( get_template_directory() . '/inc/post_type_cta.php' );
/*
 * Load PWD Custom loign logo compatibility file.
 */
require( get_template_directory() . '/inc/pwd-login/pwd-login.php' );
/*
 * Load Under Construction compatibility file.
 */
require( get_template_directory() . '/inc/under-construction/under-construction.php' );

require( get_template_directory() . '/inc/wp_bootstrap_navwalker.php' );


if ( ! function_exists( 'pwd_setup' ) ) :
/**
 * Sets up theme defaults and registers support for various WordPress features.
 *
 * Note that this function is hooked into the after_setup_theme hook, which runs
 * before the init hook. The init hook is too late for some features, such as indicating
 * support post thumbnails.
 *
 * @since PWD Default Theme 1.0
 */


function pwd_setup() {
	/**
	 * Custom template tags for this theme.
	 */
	require( get_template_directory() . '/inc/template-tags.php' );
	/**
	 * Custom functions that act independently of the theme templates
	 */
	require( get_template_directory() . '/inc/extras.php' );
	/**
	 * Customizer additions
	 */
	require( get_template_directory() . '/inc/customizer.php' );
	/**
	 * Make theme available for translation
	 * Translations can be filed in the /languages/ directory
	 * If you're building a theme based on PWD Default Theme, use a find and replace
	 * to change 'pwd' to the name of your theme in all the template files
	 */
	//load_theme_textdomain( 'pwd', get_template_directory() . '/languages' );
	/**
	 * Add default posts and comments RSS feed links to head
	 */
	add_theme_support( 'automatic-feed-links' );
	/**
	 * Enable support for Post Thumbnails
	 */
	add_theme_support( 'post-thumbnails' );
	/**
	 * This theme uses wp_nav_menu() in one location.
	 */
	register_nav_menus( array(
		'primary' => __( 'Primary Menu', 'pwd' ),
		'footer' => __( 'Footer Menu', 'pwd' ),
	) );
	/**
	 * Enable support for Post Formats
	 */
	//add_theme_support( 'post-formats', array( 'aside', 'image', 'video', 'quote', 'link' ) );
}
endif; // pwd_setup
add_action( 'after_setup_theme', 'pwd_setup' );
/**
 * Setup the WordPress core custom background feature.
 *
 * Use add_theme_support to register support for WordPress 3.4+
 * as well as provide backward compatibility for WordPress 3.3
 * using feature detection of wp_get_theme() which was introduced
 * in WordPress 3.4.
 *
 * @todo Remove the 3.3 support when WordPress 3.6 is released.
 *
 * Hooks into the after_setup_theme action.
 */
function pwd_register_custom_background() {
	$args = array(
		'default-color' => 'ffffff',
		'default-image' => '',
	);
	$args = apply_filters( 'pwd_custom_background_args', $args );
	if ( function_exists( 'wp_get_theme' ) ) {
		add_theme_support( 'custom-background', $args );
	} else {
		define( 'BACKGROUND_COLOR', $args['default-color'] );
		if ( ! empty( $args['default-image'] ) )
			define( 'BACKGROUND_IMAGE', $args['default-image'] );
		//add_custom_background();
	}
}
// add_action( 'after_setup_theme', 'pwd_register_custom_background' );
/**
 * Register widgetized area and update sidebar with default widgets
 *
 * @since PWD Default Theme 1.0
 */
function pwd_widgets_init() {
	register_sidebar( array(
		'name' => __( 'Sidebar', 'pwd' ),
		'id' => 'sidebar-1',
		'before_widget' => '<aside id="%1$s" class="widget %2$s">',
		'after_widget' => '</aside>',
		'before_title' => '<h3 class="widget-title">',
		'after_title' => '</h3>',
	) );

	register_sidebar( array(
		'name' => __( 'Sidebar Home', 'dm' ),
		'id' => 'sidebar-home',
		'before_widget' => '<div id="%1$s" class="widget col-md-12 col-sm-12 %2$s">',
		'after_widget' => '</div>',
		'before_title' => '<h3 class="widget-title">',
		'after_title' => '</h3>',
	) );

	register_sidebar( array(
		'name' => __( 'Sidebar Footer', 'dm' ),
		'id' => 'sidebar-footer',
		'before_widget' => '<div id="%1$s" class="widget col-md-12 col-sm-12 %2$s">',
		'after_widget' => '</div>',
		'before_title' => '<h3 class="widget-title">',
		'after_title' => '</h3>',
	) );
}
add_action( 'widgets_init', 'pwd_widgets_init' );
/**
 * Enqueue scripts and styles
 */
function pwd_scripts() {
	
	wp_enqueue_style( 'bootstrap', get_template_directory_uri() . '/lib/bootstrap/css/bootstrap.css' );
	wp_enqueue_style( 'style-bxslider', get_template_directory_uri() . '/js/jquery.bxslider/jquery.bxslider.css');
	wp_enqueue_style( 'style-fancybox', get_template_directory_uri() . '/js/jquery.fancybox/jquery.fancybox-1.3.4.css' );
	wp_enqueue_style( 'style-menu', get_template_directory_uri() . '/js/jquery.sidr.light.css');
	
	wp_enqueue_style( 'style', get_stylesheet_uri() );
	wp_enqueue_style( 'custom-home', get_template_directory_uri() . '/custom-home.css' );
	
	wp_enqueue_script( 'bootstrap', get_template_directory_uri() . '/lib/bootstrap/js/bootstrap.js', array(), '1.3.4', true  );
	wp_enqueue_script( 'jquery-bxslider', get_template_directory_uri() . '/js/jquery.bxslider/jquery.bxslider.min.js', array( 'jquery' ), '4', true );
	wp_enqueue_script( 'jquery-fancybox', get_template_directory_uri() . '/js/jquery.fancybox/jquery.fancybox-1.3.4.pack.js', array( 'jquery' ), '1.3.4', true );
	wp_enqueue_script( 'small-menu', get_template_directory_uri() . '/js/small-menu.js', array( 'jquery' ), '20120206', true );
	//wp_enqueue_script( 'mobile-menu', get_template_directory_uri() . '/js/jquery.sidr.min.js', array( 'jquery' ), '1.0', false );
	wp_enqueue_script( 'mobile-menu', get_template_directory_uri() . '/js/responsive-nav.js', array( 'jquery' ), '1.0', false );
	
	wp_enqueue_script( 'pwd-custom', get_template_directory_uri() . '/js/pwd-custom.js', array( 'jquery' ), '1.0', true );
	if ( is_singular() && comments_open() && get_option( 'thread_comments' ) ) {
		wp_enqueue_script( 'comment-reply' );
	}
	if ( is_singular() && wp_attachment_is_image() ) {
		wp_enqueue_script( 'keyboard-image-navigation', get_template_directory_uri() . '/js/keyboard-image-navigation.js', array( 'jquery' ), '20120202' );
	}
}
add_action( 'wp_enqueue_scripts', 'pwd_scripts' );
/**
 * Implement the Custom Header feature
 */
require( get_template_directory() . '/inc/custom-header.php' );
function pwd_copyright(){
	 $url = home_url();
	
	echo "&copy; Copyright " . date("Y ") .'<a href='.$url.'>'. get_bloginfo( 'name' ).'</a>'.'.';
}
 add_action('pwd_copyright','pwd_copyright');
function dm_copyright(){
	echo "Copyright all rights reserved <span>&copy;" . get_bloginfo( 'name' )." ". date("Y ") .'</span>.';
}
add_action('dm_copyright','dm_copyright');

function pwd_custom_excerpt_length( $length ) {
	return 30;
}
add_filter( 'excerpt_length', 'pwd_custom_excerpt_length', 999 );
// Puts link in excerpts more tag
function pwd_new_excerpt_more($more) {
       global $post;
	return '<a class="readmore" href="'. get_permalink($post->ID) . '">Read More...</a>';
}
add_filter('excerpt_more', 'pwd_new_excerpt_more');
add_filter('default_hidden_meta_boxes', 'be_hidden_meta_boxes', 10, 2);
function be_hidden_meta_boxes($hidden, $screen) {
	if ( 'post' == $screen->base || 'page' == $screen->base )
		$hidden = array('slugdiv', 'trackbacksdiv', 'postexcerpt', 'commentstatusdiv', 'commentsdiv', 'authordiv', 'revisionsdiv');
		// removed 'postcustom',
	return $hidden;
}
add_filter("gform_date_max_year", "set_max_year");
function set_max_year($max_year){
    return 2030;
}
if( class_exists( 'kdMultipleFeaturedImages' ) ) {
        $args = array(
                'id' => 'featured-image-2',
                'post_type' => 'page',      // Set this to post or page
                'labels' => array(
                    'name'      => 'Featured image 2',
                    'set'       => 'Set featured image 2',
                    'remove'    => 'Remove featured image 2',
                    'use'       => 'Use as featured image 2',
                )
        );
		
		 $args2 = array(
                'id' => 'featured-image-3',
                'post_type' => 'page',      // Set this to post or page
                'labels' => array(
                    'name'      => 'Featured image 3',
                    'set'       => 'Set featured image 3',
                    'remove'    => 'Remove featured image 3',
                    'use'       => 'Use as featured image 3',
                )
        );
		 $args3 = array(
                'id' => 'featured-image-4',
                'post_type' => 'page',      // Set this to post or page
                'labels' => array(
                    'name'      => 'Featured image 4',
                    'set'       => 'Set featured image 4',
                    'remove'    => 'Remove featured image 4',
                    'use'       => 'Use as featured image 4',
                )
        );
		 
        new kdMultipleFeaturedImages( $args );
		new kdMultipleFeaturedImages( $args2 );
		new kdMultipleFeaturedImages( $args3 );
		
}
// Remove query string from static files
function remove_cssjs_ver( $src ) {
 if( strpos( $src, '?ver=' ) )
 $src = remove_query_arg( 'ver', $src );
 return $src;
}
add_filter( 'style_loader_src', 'remove_cssjs_ver', 10, 2 );
add_filter( 'script_loader_src', 'remove_cssjs_ver', 10, 2 );


add_filter( 'wp_image_editors', 'dvt_force_to_use_GD' );
function dvt_force_to_use_GD($array) {
return array( 'WP_Image_Editor_GD', 'WP_Image_Editor_Imagick' );
}

// Add Winderies Post Type
function dvt_wineries_post_type() {
	$labels = array(
		'name' 					=> __('Wineries', 'winery'),
		'singular_name' 		=> __('Winery', 'winery'),
		'add_new' 				=> __('Add New', 'winery'),
		'add_new_item'		 	=> __('Add New Winery', 'winery'),
		'edit_item' 			=> __('Edit Winery', 'winery'),
		'new_item' 				=> __('New Winery', 'winery'),
		'view_item' 			=> __('View Winery', 'winery'),
		'search_items' 			=> __('Search Wineries', 'winery'),
		'not_found' 			=> __('No Wineries', 'winery'),
		'not_found_in_trash'	=> __('No Wineries found in Trash', 'winery'),
		'parent_item_colon' 	=> '',
		'menu_name' 			=> __('Wineries', 'winery'),
	);
	$args = array(
		'labels'				=> $labels,
		'public'				=> true,
		'exclude_from_search'	=> false,
		'publicly_queryable'	=> true,
		'show_ui'				=> true, 
		'show_in_menu'			=> true, 
		'query_var'				=> true,
		'rewrite'				=> true,
		'capability_type'		=> 'page',
		'has_archive'			=> true,
		'rewrite'				=> array( 'slug' => 'wineries' ),
		'hierarchical'			=> true,
		'menu_position'			=> 20,
		'menu_icon'				=> 'dashicons-id-alt',
		'supports' => array('title', 'editor', 'thumbnail', 'excerpt', 'page-attributes'),
	); 
	register_post_type('wineries', $args);
}
add_action('init', 'dvt_wineries_post_type');

function get_wineries_list() {
	$output = '';
	$args = array(
		'post_type' => 'wineries',
		'posts_per_page' => -1,
		'orderby'	=> 'title',
		'order'	=> 'ASC'
	);
	$loop = new WP_Query( $args );
	if( $loop->have_posts() ) :
		while( $loop->have_posts() ) : $loop->the_post();
			$title 	= get_the_title();
			$image 	= wp_get_attachment_url( get_post_thumbnail_id( get_the_id() ) );
			$link	= get_the_permalink();

			$output .= '<div class="wineries-container">';
				$output .= '<a href="'. $link .'" title="'. $title .'">';
					$output .= '<img src="'. $image .'" title="'. $title .'" alt="'. $title .' Image" />';
				$output	.= '</a>';
			$output .='</div>';
		endwhile;
	endif;
	return $output;
}
